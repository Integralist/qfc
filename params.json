{"name":"Qfc","tagline":"Quick Command-line File Completion","body":"# qfc\r\nQuick Command-line File Completion\r\n\r\n![qfc](https://cloud.githubusercontent.com/assets/2557967/8640880/582cb8fe-28ff-11e5-9753-41464dda938e.gif)\r\n\r\nqfc is a shell auto-complete alternative which features real-time multi-directories matching: It provides results  while you type against files in the current directory and its sub-directories.\r\nThis is useful, to avoid the burden of writing the whole path whenever you want to `cd` or `vim` a file, which is frequent especially if you use the terminal as your IDE(The terminal is the best IDE, remember! :-) ).\r\n\r\n\r\n## Features:\r\n- Real-time matching: Results are displayed while you type.\r\n- Multi-directories && Context relevant matching: if you're in a cvs(git,mercurial) managed directory, qfc will matches against your tracked(or new) files only. This is very useful to avoid 10000+ of dependency files cluttering up the results. for unmanaged dirs, qfc looks for unhidden files up to a maximum depth(set to 3).\r\n- Enhanced Filtering/Sorting of matches.\r\n- No dependencies.\r\n\r\n\r\n## Requirements\r\n- python (2.7+ or 3.0+)\r\n- Bash-4.0+ or Zshell.\r\n- Linux Or OSX  \r\nIn OSX, it seems like Bash 3.x is the default shell which is not supported. you have to [update your Bash to 4.0+](http://apple.stackexchange.com/a/24635) or [change your shell to zshell](http://stackoverflow.com/a/1822126/1117720).\r\n\r\n\r\n## Installation:\r\n- `git clone https://github.com/pindexis/qfc $HOME/.qfc`\r\n- Add the following line to your *rc (.zshrc, .bashrc, .bash_profile in OSX):  \r\n    `[[ -s \"$HOME/.qfc/bin/qfc.sh\" ]] && source \"$HOME/.qfc/bin/qfc.sh\"`\r\n\r\n\r\n## Usage:\r\n- `Ctrl-f` : complete the word under cursor using qfc\r\n- while qfc is open:\r\n    - `TAB`: Append the selected match to the current path.\r\n    - `ENTER`: Append the selected match to the current path and returns the result.\r\n    - `Ctrl-f`: Returns the current path.\r\n    - `Arrow keys`: Navigation between files.\r\n\r\n\r\n## Even more Productivity:\r\nIf you're using zshell or Bash 4.3+, You can combine qfc with commands you frequently use to get one key-stroke experience. For example, I have the following lines in my .zshrc:\r\n```\r\nqfc_quick_command 'cd' '\\C-b' 'cd $0'\r\nqfc_quick_command 'vim' '\\C-p' 'vim $0'\r\n```\r\nThis allows me to switch directories by just pressing Ctrl-b(or editing a file by pressing Ctrl-p).\r\n![qfc](https://cloud.githubusercontent.com/assets/2557967/8654777/78534320-2984-11e5-8684-f18709af0748.gif)\r\n\r\n`qfc_quick_command` expects an `id`, `a shortcut`, and a command with `$0` placeholder(which will be replaced with the completion path).  \r\nIt's recommended to choose a 2-5 length letters only `id`(else you may encounter issues).  \r\nAlso, be careful with what keyboard shortcuts to choose(mapping some keys can prevent the terminal from working correctly).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}